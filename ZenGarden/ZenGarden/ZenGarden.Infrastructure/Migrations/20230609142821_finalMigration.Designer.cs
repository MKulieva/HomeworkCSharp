// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ZenGarden.Infrastructure;

#nullable disable

namespace ZenGarden.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230609142821_finalMigration")]
    partial class finalMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ZenGarden.Entities.Wallet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Balance")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("ZenGarden.ZenGarden.Entities.Garden", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Area")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Gardens");
                });

            modelBuilder.Entity("ZenGarden.ZenGarden.Entities.Insect", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("PlantId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.ToTable("Insects");
                });

            modelBuilder.Entity("ZenGarden.ZenGarden.Entities.Plant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("GardenID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GardenID");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("ZenGarden.ZenGarden.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ZenGarden.Entities.Wallet", b =>
                {
                    b.HasOne("ZenGarden.ZenGarden.Entities.User", "User")
                        .WithOne("Wallet")
                        .HasForeignKey("ZenGarden.Entities.Wallet", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ZenGarden.ZenGarden.Entities.Garden", b =>
                {
                    b.HasOne("ZenGarden.ZenGarden.Entities.User", "User")
                        .WithOne("Garden")
                        .HasForeignKey("ZenGarden.ZenGarden.Entities.Garden", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ZenGarden.ZenGarden.Entities.Insect", b =>
                {
                    b.HasOne("ZenGarden.ZenGarden.Entities.Plant", "HomePlant")
                        .WithMany("Insects")
                        .HasForeignKey("PlantId");

                    b.Navigation("HomePlant");
                });

            modelBuilder.Entity("ZenGarden.ZenGarden.Entities.Plant", b =>
                {
                    b.HasOne("ZenGarden.ZenGarden.Entities.Garden", "Garden")
                        .WithMany("Plants")
                        .HasForeignKey("GardenID");

                    b.Navigation("Garden");
                });

            modelBuilder.Entity("ZenGarden.ZenGarden.Entities.Garden", b =>
                {
                    b.Navigation("Plants");
                });

            modelBuilder.Entity("ZenGarden.ZenGarden.Entities.Plant", b =>
                {
                    b.Navigation("Insects");
                });

            modelBuilder.Entity("ZenGarden.ZenGarden.Entities.User", b =>
                {
                    b.Navigation("Garden")
                        .IsRequired();

                    b.Navigation("Wallet")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
