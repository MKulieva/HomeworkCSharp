// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ZenGarden.Infrastructure;

#nullable disable

namespace ZenGarden.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230523082650_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ZenGarden.ZenGarden.Entities.Garden", b =>
                {
                    b.Property<long>("GardenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("GardenId"));

                    b.Property<int>("Area")
                        .HasColumnType("integer");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("userId")
                        .HasColumnType("bigint");

                    b.HasKey("GardenId");

                    b.HasIndex("userId");

                    b.ToTable("Gardens");
                });

            modelBuilder.Entity("ZenGarden.ZenGarden.Entities.Plant", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long?>("GardenId")
                        .HasColumnType("bigint");

                    b.Property<string>("PlantDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlantName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("GardenId");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("ZenGarden.ZenGarden.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("GardenID")
                        .HasColumnType("bigint");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ZenGarden.ZenGarden.Entities.Garden", b =>
                {
                    b.HasOne("ZenGarden.ZenGarden.Entities.User", "user")
                        .WithMany()
                        .HasForeignKey("userId");

                    b.Navigation("user");
                });

            modelBuilder.Entity("ZenGarden.ZenGarden.Entities.Plant", b =>
                {
                    b.HasOne("ZenGarden.ZenGarden.Entities.Garden", null)
                        .WithMany("Plants")
                        .HasForeignKey("GardenId");
                });

            modelBuilder.Entity("ZenGarden.ZenGarden.Entities.Garden", b =>
                {
                    b.Navigation("Plants");
                });
#pragma warning restore 612, 618
        }
    }
}
